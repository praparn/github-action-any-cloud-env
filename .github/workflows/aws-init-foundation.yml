name: 'AWS initial foundation'
on:
  push:
    tags:
      - 'aws-init-foundation*'
  pull_request:
    tags:
      - 'aws-init-foundation*'

jobs:
  create-foundation:
    runs-on: ubuntu-latest
    env:
      working-directory: ./aws/
      TF_VAR_access_key: ${{ secrets.AWS_ACCESSKEY }}
      TF_VAR_secret_key: ${{ secrets.AWS_SECRET }}
      TF_VAR_region: ${{ secrets.AWS_REGION }}

    defaults:
      run:
        working-directory: ${{env.working-directory}}
    steps:
      # Checkout code
    - uses: actions/checkout@master
      name: Git checkout code

      # Prepare Configuration and Seed file 
    - name: Setup system configruation
      run: | 
        pwd
        ls -lh
        # Clone template file and preparation
        cp ./99.Systemplate/00_provider-manual.tftemplate ./99.Systemplate/00_provider.tf
        sed -i -e "s/<bucket>/${{ secrets.AWS_BUCKETNAME }}/g" ./99.Systemplate/00_provider.tf
        sed -i -e "s/<region>/${{ secrets.AWS_REGION }}/g" ./99.Systemplate/00_provider.tf

        # Copy all properties file to target folder
        cp ./99.Systemplate/00_provider.tf ./1.Environment/01_BaseEnvironment/00_provider.tf
        cp ./99.Systemplate/00_provider.tf ./1.Environment/02_InitialParameter/00_provider.tf
        cp ./99.Systemplate/global_variable.auto.tfvars ./1.Environment/01_BaseEnvironment/global_variable.auto.tfvars
        cp ./99.Systemplate/global_variables.tf ./1.Environment/01_BaseEnvironment/global_variables.tf
        cp ./99.Systemplate/global_variable.auto.tfvars ./1.Environment/02_InitialParameter/global_variable.auto.tfvars
        cp ./99.Systemplate/global_variables.tf ./1.Environment/02_InitialParameter/global_variables.tf
        
    - name: Load Terraform to operate
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.9

    - name: Terraform readiness verify
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform initialize
      id: init
      run: terraform init -input=false

    - name: Terraform validation configuration step1
      id: validate
      run: terraform validate -no-color

    - name: Terraform configuration step2
      id: plan
      run: terraform plan -no-color -out=tfplan -input=false
      continue-on-error: true

    - name: Terraform create
      id: apply
      run: terraform apply -input=false tfplan
      continue-on-error: true

    - name: AKS export output
      id: output
      run: terraform output > ../../99.Systemplate/system_variable.auto.tfvars
      continue-on-error: true

      # CleanUp process
    - name: CleanUp temporary file
      run: | 
        rm ./global_variable.auto.tfvars
        rm ./global_variables.tf

    - uses: actions-js/push@master
      name: Commit and push result back
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        message: "Commit for update result create environment"